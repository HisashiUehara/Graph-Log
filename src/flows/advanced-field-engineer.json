{
  "version": 0.5,
  "nodes": {
    "source": {
      "value": {
        "query": "",
        "logData": "",
        "requestType": "analyze"
      }
    },
    "logSplitter": {
      "agent": "stringSplitterAgent",
      "inputs": {
        "text": ":source.logData"
      },
      "params": {
        "separator": "\n"
      },
      "if": ":source.logData",
      "isResult": true
    },
    "errorFilter": {
      "agent": "propertyFilterAgent",
      "inputs": {
        "item": ":logSplitter.contents"
      },
      "params": {
        "filterFunction": "item => item.toLowerCase().includes('error') || item.toLowerCase().includes('warning')"
      },
      "if": ":logSplitter",
      "isResult": true
    },
    "logAnalysis": {
      "agent": "stringTemplateAgent",
      "inputs": {
        "totalLines": ":logSplitter.contents",
        "errorLines": ":errorFilter",
        "query": ":source.query"
      },
      "params": {
        "template": "ログ分析結果:\n総行数: ${totalLines.length}行\nエラー/警告行数: ${errorLines.length}行\n\n主要なエラー:\n${errorLines.slice(0, 3).join('\\n')}\n\nユーザーの質問: ${query}\n\n推奨対処法:\n1. CPU使用率の確認と最適化\n2. メモリ使用量の監視\n3. ネットワーク接続の確認\n4. システムの再起動確認"
      },
      "if": ":source.logData",
      "isResult": true
    },
    "knowledgeBase": {
      "agent": "copyAgent",
      "inputs": {
        "documents": [
          {
            "title": "CPU使用率対処法",
            "content": "CPU使用率が95%を超えた場合：1. プロセス確認 2. 不要サービス停止 3. システム再起動",
            "category": "performance"
          },
          {
            "title": "ネットワーク接続エラー",
            "content": "Connection timeout エラー：1. ネットワーク設定確認 2. ファイアウォール設定 3. DNS設定確認",
            "category": "network"
          },
          {
            "title": "メモリ不足対処",
            "content": "Available memory不足：1. メモリ使用量確認 2. 不要プロセス終了 3. スワップ設定確認",
            "category": "memory"
          }
        ]
      },
      "if": ":source.query",
      "isResult": true
    },
    "finalReport": {
      "agent": "stringTemplateAgent",
      "inputs": {
        "analysis": ":logAnalysis",
        "knowledge": ":knowledgeBase.documents",
        "requestType": ":source.requestType"
      },
      "params": {
        "template": "=== フィールドエンジニア レポート ===\n\n${analysis}\n\n=== 関連知識ベース ===\n${knowledge.map(doc => `- ${doc.title}: ${doc.content}`).join('\\n')}\n\n=== 処理タイプ ===\n${requestType}\n\n=== 生成時刻 ===\n${new Date().toISOString()}"
      },
      "isResult": true
    }
  }
} 